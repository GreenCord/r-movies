{"version":3,"sources":["logo.svg","components/FormatDate/FormatDate.js","components/MovieContainer/MovieContainer.js","components/MovieContainer/MoviePrimaryContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FormatDate","react_default","a","createElement","dist_default","format","date","this","props","Component","MovieContainer","className","position","FormatDate_FormatDate","movie","release_date","title","tagline","overview","MoviePrimaryContainer","console","log","backdrop_path","movies","length","imgUrl","style","backgroundImage","concat","components_MovieContainer_MovieContainer","App","_useAppState","_useState","useState","_useState2","Object","slicedToArray","top5","setTop5","_useState3","_useState4","isLoading","setIsLoading","_useState5","url","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","sent","data","stop","apply","arguments","getMovies","useAppState","src","logo","alt","components_MovieContainer_MoviePrimaryContainer","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4883bba6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9102ae5a.svg\";","import React, { Component } from \"react\";\nimport Moment from \"react-moment\";\n\nexport default class FormatDate extends Component {\n  render() {\n    return <Moment format=\"MMMM D, YYYY\" date={this.props.date} />;\n  }\n}\n","import React from \"react\";\n\nimport FormatDate from \"../FormatDate/FormatDate\";\n\nimport \"./MovieContainer.scss\";\n\nconst MovieContainer = props => {\n  return (\n    <div className=\"movie-info-container\">\n      <div className=\"movie-info-intro\">\n        <span className=\"movie-info-genre\">#{props.position}</span>\n        <span className=\"movie-info-releaseDate\">\n          Released: <FormatDate date={props.movie.release_date} />\n        </span>\n      </div>\n      <h1 className=\"movie-info-title\">{props.movie.title}</h1>\n      <p className=\"movie-info-tagline\">{props.movie.tagline}</p>\n      <p className=\"movie-info-description\">{props.movie.overview}</p>\n      {/* <button className=\"btn btn-solid\">Details</button> */}\n    </div>\n  );\n};\n\nexport default MovieContainer;\n","import React from \"react\";\n\nimport MovieContainer from \"./MovieContainer\";\n\nimport \"./MoviePrimaryContainer.scss\";\n\nconst MoviePrimaryContainer = props => {\n  console.log(\"MoviePrimaryContainer - props\", props);\n  const backdrop_path =\n    props.movies.length === 0\n      ? \"https://placehold.it/1920x1280\"\n      : props.imgUrl + props.movies[0].backdrop_path;\n\n  return (\n    <section\n      className=\"movie-primary-wrapper\"\n      style={{\n        backgroundImage: `url(${backdrop_path})`\n      }}\n    >\n      <div className=\"movie-primary-container\">\n        <MovieContainer position=\"1\" movie={props.movies[0]} />\n      </div>\n    </section>\n  );\n};\n\nexport default MoviePrimaryContainer;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"./App.scss\";\nimport logo from \"./logo.svg\";\n// Components\nimport MoviePrimaryContainer from \"./components/MovieContainer/MoviePrimaryContainer\";\n\nconst useAppState = () => {\n  const [top5, setTop5] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [url] = useState(\"/api/movies/top5\");\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n      const response = await axios(url);\n      console.log(\"useEffect - getMovies - response\", response);\n      setTop5(response.data);\n      setIsLoading(false);\n    };\n    getMovies();\n  }, [url]);\n\n  // const setAppState = () => {\n  //   setTop5(getTop5);\n  // };\n\n  return {\n    top5,\n    isLoading\n  };\n};\n\nconst App = props => {\n  const { top5, isLoading } = useAppState();\n  const imgUrl = \"https://image.tmdb.org/t/p\";\n  const size = {\n    original: \"/original\",\n    w500: \"/w500\"\n  };\n\n  // const background =\n  //   \"http://image.tmdb.org/t/p/original/adw6Lq9FiC9zjYEpOqfq03ituwp.jpg\";\n  return (\n    <div className=\"App\">\n      <div className=\"flex-wrapper\">\n        <header>\n          <img src={logo} alt=\"nevizen\" />\n        </header>\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <main>\n            <MoviePrimaryContainer\n              movies={top5}\n              imgUrl={imgUrl + size.original}\n            />\n            <section className=\"movie-secondary-wrapper\">\n              <div className=\"movie-secondary-container\">\n                <img\n                  src=\"http://image.tmdb.org/t/p/w500/adw6Lq9FiC9zjYEpOqfq03ituwp.jpg\"\n                  alt=\"temp\"\n                />\n                <div className=\"movie-info-container\">\n                  <div className=\"movie-info-intro\">\n                    <span className=\"movie-info-genre\">Drama</span>\n                    <span className=\"movie-info-releaseDate\">\n                      October 15, 1999\n                    </span>\n                  </div>\n                  <h1 className=\"movie-info-title\">Fight Club</h1>\n                  <p className=\"movie-info-tagline\">Mischief. Mayhem. Soap.</p>\n                  <p className=\"movie-info-description\">\n                    A ticking-time-bomb insomniac and a slippery soap salesman\n                    channel primal male aggression into a shocking new form of\n                    therapy. Their concept catches on, with underground \"fight\n                    clubs\" forming in every town, until an eccentric gets in the\n                    way and ignites an out-of-control spiral toward oblivion.\n                  </p>\n                  <button className=\"btn btn-solid\">Details</button>\n                </div>\n              </div>\n              <div className=\"movie-secondary-container\">\n                <img\n                  src=\"http://image.tmdb.org/t/p/w500/adw6Lq9FiC9zjYEpOqfq03ituwp.jpg\"\n                  alt=\"temp\"\n                />\n                <div className=\"movie-info-container\">\n                  <div className=\"movie-info-intro\">\n                    <span className=\"movie-info-genre\">Drama</span>\n                    <span className=\"movie-info-releaseDate\">\n                      October 15, 1999\n                    </span>\n                  </div>\n                  <h1 className=\"movie-info-title\">Fight Club</h1>\n                  <p className=\"movie-info-tagline\">Mischief. Mayhem. Soap.</p>\n                  <p className=\"movie-info-description\">\n                    A ticking-time-bomb insomniac and a slippery soap salesman\n                    channel primal male aggression into a shocking new form of\n                    therapy. Their concept catches on, with underground \"fight\n                    clubs\" forming in every town, until an eccentric gets in the\n                    way and ignites an out-of-control spiral toward oblivion.\n                  </p>\n                  <button className=\"btn btn-solid\">Details</button>\n                </div>\n              </div>\n              <div className=\"movie-secondary-container\">\n                <img\n                  src=\"http://image.tmdb.org/t/p/w500/adw6Lq9FiC9zjYEpOqfq03ituwp.jpg\"\n                  alt=\"temp\"\n                />\n                <div className=\"movie-info-container\">\n                  <div className=\"movie-info-intro\">\n                    <span className=\"movie-info-genre\">Drama</span>\n                    <span className=\"movie-info-releaseDate\">\n                      October 15, 1999\n                    </span>\n                  </div>\n                  <h1 className=\"movie-info-title\">Fight Club</h1>\n                  <p className=\"movie-info-tagline\">Mischief. Mayhem. Soap.</p>\n                  <p className=\"movie-info-description\">\n                    A ticking-time-bomb insomniac and a slippery soap salesman\n                    channel primal male aggression into a shocking new form of\n                    therapy. Their concept catches on, with underground \"fight\n                    clubs\" forming in every town, until an eccentric gets in the\n                    way and ignites an out-of-control spiral toward oblivion.\n                  </p>\n                  <button className=\"btn btn-solid\">Details</button>\n                </div>\n              </div>\n              <div className=\"movie-secondary-container\">\n                <img\n                  src=\"http://image.tmdb.org/t/p/w500/adw6Lq9FiC9zjYEpOqfq03ituwp.jpg\"\n                  alt=\"temp\"\n                />\n                <div className=\"movie-info-container\">\n                  <div className=\"movie-info-intro\">\n                    <span className=\"movie-info-genre\">Drama</span>\n                    <span className=\"movie-info-releaseDate\">\n                      October 15, 1999\n                    </span>\n                  </div>\n                  <h1 className=\"movie-info-title\">Fight Club</h1>\n                  <p className=\"movie-info-tagline\">Mischief. Mayhem. Soap.</p>\n                  <p className=\"movie-info-description\">\n                    A ticking-time-bomb insomniac and a slippery soap salesman\n                    channel primal male aggression into a shocking new form of\n                    therapy. Their concept catches on, with underground \"fight\n                    clubs\" forming in every town, until an eccentric gets in the\n                    way and ignites an out-of-control spiral toward oblivion.\n                  </p>\n                  <button className=\"btn btn-solid\">Details</button>\n                </div>\n              </div>\n            </section>\n          </main>\n        )}\n      </div>\n      <footer>\n        &copy; 2019 &ndash; Steven Martinez\n        <br />\n        Movie data from{\" \"}\n        <a\n          href=\"https://www.themoviedb.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.themoviedb.org\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}