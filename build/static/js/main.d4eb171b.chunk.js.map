{"version":3,"sources":["logo.svg","components/Utilities/assets/LoadingCircle.js","components/Utilities/Loading.js","components/Header/HeaderArea.js","components/FormatDate/FormatDate.js","components/MovieContainer/MovieContainer.js","components/MovieContainer/MoviePrimaryContainer.js","components/MovieContainer/MovieDetailContainer.js","components/MovieContainer/MovieSecondaryContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LoadingCircle","props","react_default","a","createElement","className","viewBox","cx","cy","r","fill","stroke","color","strokeWidth","Loading","Utilities_assets_LoadingCircle","HeaderArea","src","logo","alt","FormatDate","dist_default","format","date","this","Component","MovieContainer","movie","genres","name","FormatDate_FormatDate","release_date","title","tagline","displayDescription","overview","length","slice","Fragment","displayCta","MoviePrimaryContainer","backdrop_path","movies","imgUrl","style","backgroundImage","concat","components_MovieContainer_MovieContainer","MovieDetailContainer","selectedMovie","components_MovieContainer_MoviePrimaryContainer","size","original","w500","poster_path","reviews","results","map","review","i","key","author","content","href","url","MovieSecondaryContainer","id","onClick","position","tempSelectedMovie","App","_useAppState","_useState","useState","_useState2","Object","slicedToArray","top5","setTop5","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setSelectedMovie","_useState7","_useState9","_useState11","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","sent","data","stop","apply","arguments","getMovies","selectIt","obj","remove","useAppState","components_Header_HeaderArea","hasOwnProperty","components_MovieContainer_MovieDetailContainer","components_Utilities_Loading","components_MovieContainer_MovieSecondaryContainer","item","window","scrollTo","target","rel","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4eb171b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9102ae5a.svg\";","import React from \"react\";\n\nimport \"./LoadingCircle.scss\";\n\nconst LoadingCircle = props => {\n  return (\n    <div className=\"loader-wrapper\">\n      <svg className=\"loading-circle\" viewBox=\"25 25 50 50\">\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"20\"\n          fill=\"none\"\n          stroke={props.color}\n          strokeWidth={props.strokeWidth}\n          className=\"loading-circle-stroke\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default LoadingCircle;\n","import React from \"react\";\n\nimport \"./Loading.scss\";\nimport LoadingCircle from \"./assets/LoadingCircle\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <LoadingCircle color=\"#707070\" strokeWidth=\"6\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\n\nimport \"./HeaderArea.scss\";\nimport logo from \"../../logo.svg\";\n\nconst HeaderArea = () => {\n  return (\n    <header className=\"headerArea\">\n      <img src={logo} alt=\"nevizen\" />\n      <div>Top 5 Most Popular Movies</div>\n    </header>\n  );\n};\n\nexport default HeaderArea;\n","import React, { Component } from \"react\";\nimport Moment from \"react-moment\";\n\nexport default class FormatDate extends Component {\n  render() {\n    return <Moment format=\"MMMM D, YYYY\" date={this.props.date} />;\n  }\n}\n","import React from \"react\";\n\nimport FormatDate from \"../FormatDate/FormatDate\";\n\nimport \"./MovieContainer.scss\";\n\nconst MovieContainer = props => {\n  return (\n    <div className=\"movie-info-container\">\n      <div\n        className=\"flex-wrapper\"\n        // style={props.displayCta ? { flex: \"1 0 auto\" } : { flex: \"0 0 auto\" }}\n      >\n        <div className=\"movie-info-intro\">\n          <span className=\"movie-info-genre\">{props.movie.genres[0].name}</span>\n          <span className=\"movie-info-releaseDate\">\n            Released: <FormatDate date={props.movie.release_date} />\n          </span>\n        </div>\n        <h1 className=\"movie-info-title\">{props.movie.title}</h1>\n        <p className=\"movie-info-tagline\">{props.movie.tagline}</p>\n        {props.displayDescription ? (\n          <p className=\"movie-info-description\">\n            {props.movie.overview.length > 250\n              ? props.movie.overview.slice(0, 250) + \"...\"\n              : props.movie.overview}\n          </p>\n        ) : (\n          <></>\n        )}\n      </div>\n      {props.displayCta ? (\n        <button className=\"btn btn-solid\">Details</button>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\nexport default MovieContainer;\n","import React from \"react\";\n\nimport MovieContainer from \"./MovieContainer\";\n\nimport \"./MoviePrimaryContainer.scss\";\n\nconst MoviePrimaryContainer = props => {\n  const backdrop_path =\n    props.movies.length === 0\n      ? \"https://placehold.it/1920x1280\"\n      : props.imgUrl + props.movies[0].backdrop_path;\n\n  return (\n    <section\n      className=\"movie-primary-wrapper\"\n      style={{\n        backgroundImage: `url(${backdrop_path})`\n      }}\n    >\n      <div className=\"movie-primary-container\">\n        <MovieContainer\n          movie={props.movies[0]}\n          displayDescription={props.displayDescription}\n          displayCta={props.displayCta}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default MoviePrimaryContainer;\n","import React from \"react\";\n\nimport \"./MovieDetailContainer.scss\";\n\nimport MoviePrimaryContainer from \"./MoviePrimaryContainer\";\n\nconst MovieDetailContainer = props => {\n  const selectedMovie = [props.selectedMovie];\n\n  return (\n    <>\n      <MoviePrimaryContainer\n        movies={selectedMovie}\n        imgUrl={props.imgUrl + props.size.original}\n      />\n      <section className=\"movie-detail-wrapper\">\n        <div className=\"movie-detail-container\">\n          <header>\n            <h2>Overview</h2>\n            <p>{props.selectedMovie.overview}</p>\n            <img\n              src={\n                props.imgUrl + props.size.w500 + props.selectedMovie.poster_path\n              }\n              alt={\"Poster for: \" + props.selectedMovie.title}\n            />\n          </header>\n          <section>\n            <h2>Reviews</h2>\n            {props.selectedMovie.reviews.results.map((review, i) => (\n              <div key={review.author + i}>\n                <p className=\"review-byLine\">{review.author}</p>\n                <p>\n                  {review.content.length > 250\n                    ? review.content.slice(0, 250) + \"...\"\n                    : review.content}\n                </p>\n                <p>\n                  <a href={review.url} title={\"Review by \" + review.author}>\n                    Read Full Review\n                  </a>\n                </p>\n              </div>\n            ))}\n          </section>\n          <section>\n            <h2>Videos</h2>\n            <div>Temp</div>\n          </section>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default MovieDetailContainer;\n","import React from \"react\";\n\nimport \"./MovieSecondaryContainer.scss\";\n\nimport MovieContainer from \"./MovieContainer\";\n\nconst MovieSecondaryContainer = props => {\n  return (\n    <section className=\"movie-secondary-wrapper\">\n      {props.movies.slice(1, 5).map((movie, i) => (\n        <div\n          key={movie.id}\n          onClick={() => props.onClick(movie, i + 2)}\n          className=\"movie-secondary-container\"\n        >\n          <img\n            src={`${props.imgUrl}${props.size.w500}` + movie.backdrop_path}\n            alt={movie.title + ` movie poster`}\n          />\n          <MovieContainer\n            position={i + 2}\n            movie={movie}\n            displayDescription={props.displayDescription}\n            displayCta={props.displayCta}\n          />\n        </div>\n      ))}\n    </section>\n  );\n};\n\nexport default MovieSecondaryContainer;\n","import \"core-js\";\nimport \"raf/polyfill\";\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Assets\nimport \"./App.scss\";\n\n// Components\nimport Loading from \"./components/Utilities/Loading\";\nimport HeaderArea from \"./components/Header/HeaderArea\";\nimport MovieDetailContainer from \"./components/MovieContainer/MovieDetailContainer\";\nimport MoviePrimaryContainer from \"./components/MovieContainer/MoviePrimaryContainer\";\nimport MovieSecondaryContainer from \"./components/MovieContainer/MovieSecondaryContainer\";\n\n// Temporary Data for Development\n// import tempSelectedMovie from \"./tempdata/tempSelectedMovie.json\";\nconst tempSelectedMovie = {};\n\nconst useAppState = () => {\n  const [top5, setTop5] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // const [selectedMovie, setSelectedMovie] = useState({});\n  const [selectedMovie, setSelectedMovie] = useState(tempSelectedMovie);\n  const [url] = useState(\"/api/movies/top5\");\n  const [imgUrl] = useState(\"https://image.tmdb.org/t/p\");\n  const [size] = useState({\n    original: \"/original\",\n    w500: \"/w500\"\n  });\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n      const response = await axios(url);\n      setTop5(response.data);\n      setIsLoading(false);\n    };\n    getMovies();\n  }, [url]);\n\n  // const setAppState = () => {\n  //   setTop5(getTop5);\n  // };\n\n  const selectIt = (obj, remove) => {\n    remove ? setSelectedMovie({}) : setSelectedMovie(obj);\n  };\n\n  return {\n    top5,\n    isLoading,\n    selectedMovie,\n    imgUrl,\n    size,\n    selectIt\n  };\n};\n\nconst App = props => {\n  const {\n    top5,\n    isLoading,\n    selectedMovie,\n    imgUrl,\n    size,\n    selectIt\n  } = useAppState();\n  // const imgUrl = \"https://image.tmdb.org/t/p\";\n  // const size = {\n  //   original: \"/original\",\n  //   w500: \"/w500\"\n  // };\n\n  const onSelectItem = item => {\n    selectIt(item);\n    window.scrollTo(0, 0);\n  };\n  // const background =\n  //   \"http://image.tmdb.org/t/p/original/adw6Lq9FiC9zjYEpOqfq03ituwp.jpg\";\n  return (\n    <div className=\"App\">\n      <div className=\"flex-wrapper\">\n        <HeaderArea />\n        <main>\n          {selectedMovie.hasOwnProperty(\"id\") ? (\n            <MovieDetailContainer\n              selectedMovie={selectedMovie}\n              imgUrl={imgUrl}\n              size={size}\n              displayDescription={false}\n              displayCta={false}\n            />\n          ) : isLoading ? (\n            <Loading />\n          ) : (\n            <>\n              <MoviePrimaryContainer\n                movies={top5}\n                imgUrl={imgUrl + size.original}\n                displayDescription={true}\n                displayCta={true}\n              />\n              <MovieSecondaryContainer\n                movies={top5}\n                imgUrl={imgUrl}\n                size={size}\n                displayDescription={true}\n                displayCta={true}\n                onClick={onSelectItem}\n              />\n            </>\n          )}\n        </main>\n      </div>\n      <footer>\n        &copy; 2019 &ndash; Steven Martinez\n        <br />\n        Movie data from{\" \"}\n        <a\n          href=\"https://www.themoviedb.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://www.themoviedb.org\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}